<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAACgkAAAJNU0Z0AUkBTAIBAQIB
        AAEQAQABMAEAARgBAAEYAQAD/wEAASEBEAj/AUIBTQE2BwABNgMAASgDAAFgAwABGAMAAQEBAAEgBgAB
        JBoAA0ABdwNAAbkDQAG5A0ABuQNAAbkDQAG5A0ABuQNAAbkDQAG5A0ABuQNAAbkDQAG5A0ABuQNAAbkD
        QAG5A0QBmRgAAwUBBgMAAf8DAAH/AwAB/wMcASf/ABEAAx0B6gNFAZ8DHQEpAx0BKQMdASkDHQEpAx0B
        KQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQM5AWEDAAH/FAADMAHVAwIB/gQAAzAB
        1wMAAf8DHAEn/wAQAAH/JwAB/wMdAesDOQFjEAADPQHAAx0BKRAAAyQB5AMOAfcIAAMwAdcDAAH/Ax0B
        KP8ADAAB/yQAAygB4AMcAScDRAGTAwAB/wMOAfYIAANDAa8DJAE0EAADEgEYAwAB/wMwAdYIAAMwAdcD
        AAH/AxwBJ/8ACAAB/yQAAzMBUwNEAaQDOAFeAwgB+gM+AXEDDgH3BAADQwGvAyQBNBQAAx0BKAMAAf8D
        MAHWCAADMAHXAwAB/wMcASf/AAQAAf8rAAH/AwgB+ggAAz4BcQMOAfYDQwGvAyQBNBgAAx0BKAMAAf8D
        MAHWCAADMAHXAwAB/wMdASj/AAH/BwAB/wMAAf8DAAH/A0UBmAMLAQ4DPQFuAz0BbgM9AW4EAAMXAe4D
        RAGJDAADPgFxAwAB/wMkATQcAAMdASgDAAH/AzAB1ggAAzAB1wMAAf8DHAEn+wAB/wQAAxMB8wQAAyoB
        QANFAaEDDAEQAz8BdgM/AXYDPwF2CAADFwHuA0QBiQwAAz4BcQMOAfYgAAMdASgDAAH/AzAB1wgAAzAB
        1wMAAf8DHAEnBAAEAQM8AWoDQwGtA0MBrwM/AXYDBgEH2wAB/wQAAxMB8wQAAyoBQANFAaEDGQEiA0QB
        pgNEAaYDRAGmA0QBpgM9AWwEAAMXAe4DRAGJDAADPgFxAw4B9iAAAx0BKAMAAf8DMAHXCAADMAHXAwAB
        /wMMAfgDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAgH+AxsBJdMAAf8HAAH/AwAB/wMAAf8DRAGMAwIB
        AwMpAT4DKQE+AykBPgMpAT4DFAEbCAADFwHuA0QBiQwAAz4BcQMOAfYgAAMdASgDAAH/AzAB1gQAAzYB
        WgMAAf8DCAH6AxgBIRAAAwsBDgMdAeoDAAH/A0UBlM8AAf84AAMXAe4DRAGJCAAEAQMAAf8DDgH3IAAD
        HQEoAwAB/wMqAd0DAAH/A0QBpyAAAzwBawMAAf8DQAF4ywAB/wQAAxQB8QMUAfEDFAHxAzwBaSgAAxcB
        7gNEAYkEAQMAAf8DHwEsA0QBlgNBAXwgAAMdASgDAAH/AzcBzSgAA0QBjgMAAf8DAgEDxwAB/wQAAxMB
        8wQAAyoBQANFAaEDKQE+AyQB5QMkAeUDJAHlAwQBBRgAAxYB7wMAAf8DHwEsBAADKQE+A0QBrCAAA0MB
        hgMAAf8zAAH/AzcBy8cAAf8EAAMTAfMEAAMqAUADRQGhBAEDJgE4AyYBOAMmATgDJgE4AxEBFhQAA0MB
        rwMEAfwDRAGsAzIBUAMAAf8DCwEOIwAB/wM9AcEwAANBAXsDAAH/xwAB/wcAAf8DAAH/AwAB/wNFAaAD
        GwElA0QBrANEAawDRAGsA0QBrAM/AXIUAANDAa8DJQE2AzwBaQNFAaADCgENJwAB/wMuAUgwAAMFAQYD
        AAH/xwAB/0AAA0MBrwMlATYzAAH/AxUBHTcAAf/HAAH/BAADQwGGA0MBhgNDAYYDHQEoLAADQwGvAyUB
        NjMAAf8DKQE+MAAEAQMAAf/HAAH/BAADDgH3AzgBXgNDAYYDRQGhAzwBaAMAAf8DAAH/AwAB/wMJAQwM
        AANCAYEDRAGjA0QBowMmAeIDJQE2MwAB/wNEAaswAAM6AWUDAAH/xwAB/wQAAxMB8wQAAyoBQANFAaEf
        AAH/A0EBfAMqAUADRAGMAwIB/jQAA0QBogMAAf8IAAM9AcEDJQHjEAADRQGdAwIB/ggAAwIB/gMkAeTH
        AAH/BAADBAH9AzAB1wMnAeEDRQGhAzUBVwMAAf8DAAH/AwAB/wMAAf8DNAHQAxUBHQM0AdAEAAMwAUwD
        AgH+PwAB/wNFAaAEAAMUARsDAAH/AwAB/wMTAfIDJAHkAwAB/wMAAf8DOQFiBAADNgFaAwAB/wMMAQ/H
        AAH/BAADCwEOAwsBDgMLAQ4cAAMeASoDPgG7AzABTAMCAf5AAAM8AWkDAAH/AzkBYwgAAz8BdAMhAeYD
        FAHxA0UBlwQBBAADIwEyAwAB/wNDAa3LAAH/LAADHgEqAyAB5wMCAf5IAANFAZsDAAH/AzAB1wQBFAAD
        QgGzAwAB/wM3Ac3MAAMmATgDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB
        /wMAAf8DBAH9UAADJgE4AwAB/wMAAf8DAAH/AycB4QMqAd0DAAH/AwAB/wMAAf8DOQFi/wBhAAMeASoD
        QwGvAxQB8QMRAfQDPgG8AyoBQNQAAUIBTQE+BwABPgMAASgDAAFgAwABGAMAAQEBAAEBBQABIAEBFgAD
        /wEAAcABAAE/AQcC/wYAAYABAAEfASMC/wYAAb8B4wHPATEC/wYAAb8B4AHPARgC/wYAAb8B4AFPAYwB
        fwH/BgABvwHzAQ8BxgE/Af8GAAGgARMBjwHjAR8B/wYAAagBGQHPAfEBiAEfBgABqAEEAecB+AHAAQcG
        AAGgAQYBcwH8AUMBwwYAAb8B/wExAf4BDwHxBgABoQH/AYAB/wEfAfgGAAGoAQ8BxAH/AT8B/AYAAagB
        BwHAAf8BPwH8BgABoAEHAcEB/wE/AfwGAAG/Af8BzwH/AT8B/gYAAaEB/wHPAf8BPwH8BgABoAEOAQ8B
        /wE/AfwGAAGpAfwBHwH/ATMBzAYAAaABAQE/Af8BkAEIBgABowH4AX8B/wGMAREGAAG/AfgC/wHDAeMG
        AAGAAQEC/wHgAQcGAAT/AfgBHxwACw==
</value>
  </data>
</root>